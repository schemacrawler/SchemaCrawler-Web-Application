name: Create Release

on:
  workflow_dispatch:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+.[0-9]+-[A-Z]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:

# SETUP BUILD ENVIRONMENT
    - id: prepare-maven-build
      name: Prepare Maven build
      uses: sualeh/prepare-maven-build@v1.5.2
      with:
        java-version: 21
    - id: install-graphviz
      name: Install Graphviz
      uses: sualeh/install-graphviz@v1.0.3

# BUILD FOR DISTRIBUTION
# To build an image using Cloud Native Buildpacks for Spring Boot, provide
# and additional -Ddocker.skip=false argument to the Maven build.
    - id: build
      name: Build and test for distribution
      shell: bash
      run: |
        # Build
        mvn \
          --no-transfer-progress \
          --batch-mode \
          clean install

# BUILD DOCKER IMAGE LOCALLY
# Cloud Native Buildpacks for Spring Boot, whether from Paketo or Heroku consume
# more than 512 MB of RAM (free-tier limit for Heroku), and have security
# vulnerabilities flagged by Amazon ECR. For this reason, build the Docker image locally.
    - id: build-docker-image
      name: Build Docker image
      shell: bash
      run: |
        # Build
        docker build \
          -t schemacrawler/schemacrawler-webapp:v16.21.2.1 \
          -t schemacrawler/schemacrawler-webapp:latest \
          .

# PUBLISH DOCKER IMAGE
    - id: publish-docker-image
      name: Publish Docker image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      shell: bash
      run: |
        # Publish Docker image
        docker version
        docker tag \
          schemacrawler/schemacrawler-webapp \
          docker.io/schemacrawler/schemacrawler-webapp:${{ github.sha }}
        docker tag \
          schemacrawler/schemacrawler-webapp \
          docker.io/schemacrawler/schemacrawler-webapp:v16.21.2.1
        docker tag \
          schemacrawler/schemacrawler-webapp \
          docker.io/schemacrawler/schemacrawler-webapp:latest
        echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        docker push docker.io/schemacrawler/schemacrawler-webapp
        docker logout

# CREATE GITHUB RELEASE AND ADD ASSETS
    - id: create-release
      name: Create GitHub release
      uses: actions/create-release@latest
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: |
          SchemaCrawler Webapp Release ${{ github.sha }}
        draft: false
        prerelease: false
    - id: upload-release-zip
      name: Upload SchemaCrawler Webapp distribution
      uses: actions/upload-release-asset@latest
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./target/schemacrawler-webapp-16.21.2.1.jar
        asset_name: schemacrawler-webapp-16.21.2.1.jar
        asset_content_type: application/zip
